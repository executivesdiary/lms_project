"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 5.2.
"""

from pathlib import Path  # Used to create cross-platform paths
import os
# üìÅ Base directory of the entire project
BASE_DIR = Path(__file__).resolve().parent.parent

# ‚ö†Ô∏è Security: Keep this secret in production
SECRET_KEY = 'django-insecure-)v_k*#ma39$gns)9*)qsch5@qpm53dn8c-gon@9hc*@tdfk&6j'

# üêû Debug mode is only for development
DEBUG = True

# üåç Define domains allowed to access this project
ALLOWED_HOSTS = []

# üë§ Use our custom user model
AUTH_USER_MODEL = 'lead_management.CustomUser'

# üì¶ Installed apps - Django built-ins + our app
INSTALLED_APPS = [
    'django.contrib.admin',            # Admin dashboard
    'django.contrib.auth',             # Auth system
    'django.contrib.contenttypes',     # Content types (model framework)
    'django.contrib.sessions',         # Session middleware
    'django.contrib.messages',         # Flash messages framework
    'django.contrib.staticfiles',      # Static files (CSS/JS/images)
    'lead_management',                # Our custom app
    'executive_biographer'             #Our Ai biography creation model
]

# ‚öôÔ∏è Middleware runs on every request
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',    # Manages sessions via cookies
    'django.middleware.common.CommonMiddleware',               # Basic request/response handling
    'django.middleware.csrf.CsrfViewMiddleware',               # Cross-site request forgery protection
    'django.contrib.auth.middleware.AuthenticationMiddleware', # Handles logged-in users
    'django.contrib.messages.middleware.MessageMiddleware',    # Enables message framework
    'django.middleware.clickjacking.XFrameOptionsMiddleware',  # Prevents clickjacking
]

# üåê Root URL config file
ROOT_URLCONF = 'config.urls'

# üß± Template settings (HTML rendering system)
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',  # Use Django's default engine
        'DIRS': [BASE_DIR / 'templates'],  # üß≠ Custom template folder (outside apps)
        'APP_DIRS': True,  # üîç Also look inside each app's "templates" folder
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',  # Add request object to templates
                'django.contrib.auth.context_processors.auth', # Add auth user info
                'django.contrib.messages.context_processors.messages', # Flash messages
            ],
        },
    },
]

# üåÄ WSGI (used for deployment)
WSGI_APPLICATION = 'config.wsgi.application'

# üóÑÔ∏è Default SQLite DB (easy for dev)
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# üîí Password validators (security rules for creating passwords)
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',  # No username-like passwords
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',            # Minimum length requirement
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',           # Prevent common passwords
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',          # No all-numeric passwords
    },
]

# üåç Language and timezone settings
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True  # Internationalization
USE_TZ = True    # Use timezone-aware datetime

# üßæ Static files (CSS, JS, etc.)
STATIC_URL = 'static/'

# üñºÔ∏è Media files (e.g., uploaded profile pictures)
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'  # Where media files will be stored locally

# üîê Authentication Redirects
LOGIN_REDIRECT_URL = '/dashboard/'  # After successful login
LOGOUT_REDIRECT_URL = '/login/'# After logging out
LOGIN_URL = '/login/'
# Default auto primary key field type
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# ‚úÖ OpenAI API Key ‚Äì TEMPORARILY hardcoded for testing
# ‚ö†Ô∏è Switch back to .env after confirming it works
